diff --git a/hw/vendor/openhwgroup_cv32e40x/rtl/cv32e40x_controller.sv b/hw/vendor/openhwgroup_cv32e40x/rtl/cv32e40x_controller.sv
index 01fc938..9217b1b 100644
--- a/hw/vendor/openhwgroup_cv32e40x/rtl/cv32e40x_controller.sv
+++ b/hw/vendor/openhwgroup_cv32e40x/rtl/cv32e40x_controller.sv
@@ -142,6 +142,8 @@ module cv32e40x_controller import cv32e40x_pkg::*;
 
   // eXtension interface
   if_xif.cpu_commit   xif_commit_if,
+  input  logic        xif_mem_valid_i,
+  input  logic        xif_mem_ready_i,
   input               xif_csr_error_i
 );
 
@@ -239,6 +241,8 @@ module cv32e40x_controller import cv32e40x_pkg::*;
 
     // eXtension interface
     .xif_commit_if               ( xif_commit_if            ),
+    .xif_mem_valid_i             ( xif_mem_valid_i          ),
+    .xif_mem_ready_i             ( xif_mem_ready_i          ),
     .xif_csr_error_i             ( xif_csr_error_i          )
   );
 
diff --git a/hw/vendor/openhwgroup_cv32e40x/rtl/cv32e40x_controller_fsm.sv b/hw/vendor/openhwgroup_cv32e40x/rtl/cv32e40x_controller_fsm.sv
index db0c489..917d321 100644
--- a/hw/vendor/openhwgroup_cv32e40x/rtl/cv32e40x_controller_fsm.sv
+++ b/hw/vendor/openhwgroup_cv32e40x/rtl/cv32e40x_controller_fsm.sv
@@ -130,6 +130,8 @@ module cv32e40x_controller_fsm import cv32e40x_pkg::*;
 
   // eXtension interface
   if_xif.cpu_commit    xif_commit_if,
+  input  logic         xif_mem_valid_i,
+  input  logic         xif_mem_ready_i,
   input                xif_csr_error_i
 );
 
@@ -1495,7 +1497,7 @@ module cv32e40x_controller_fsm import cv32e40x_pkg::*;
           commit_valid_q <= 1'b0;
           commit_kill_q  <= 1'b0;
         end else begin
-          if ((ex_valid_i && wb_ready_i) || ctrl_fsm_o.kill_ex) begin
+          if ((ex_valid_i && wb_ready_i) || ctrl_fsm_o.kill_ex || (xif_mem_valid_i && xif_mem_ready_i)) begin
             commit_valid_q <= 1'b0;
             commit_kill_q  <= 1'b0;
           end else begin
diff --git a/hw/vendor/openhwgroup_cv32e40x/rtl/cv32e40x_core.sv b/hw/vendor/openhwgroup_cv32e40x/rtl/cv32e40x_core.sv
index 6a68368..344f960 100644
--- a/hw/vendor/openhwgroup_cv32e40x/rtl/cv32e40x_core.sv
+++ b/hw/vendor/openhwgroup_cv32e40x/rtl/cv32e40x_core.sv
@@ -577,6 +577,8 @@ module cv32e40x_core import cv32e40x_pkg::*;
 
     // eXtension interface
     .xif_issue_if                 ( xif_issue_if              ),
+    .xif_mem_valid_i              ( xif_mem_if.mem_valid      ),
+    .xif_mem_ready_i              ( xif_mem_if.mem_ready      ),
     .xif_offloading_o             ( xif_offloading_id         )
   );
 
@@ -1005,6 +1007,8 @@ module cv32e40x_core import cv32e40x_pkg::*;
 
     // eXtension interface
     .xif_commit_if                  ( xif_commit_if          ),
+    .xif_mem_valid_i                ( xif_mem_if.mem_valid   ),
+    .xif_mem_ready_i                ( xif_mem_if.mem_ready   ),
     .xif_csr_error_i                ( xif_csr_error_ex       )
   );
 
diff --git a/hw/vendor/openhwgroup_cv32e40x/rtl/cv32e40x_id_stage.sv b/hw/vendor/openhwgroup_cv32e40x/rtl/cv32e40x_id_stage.sv
index 11bc457..d4d64bf 100644
--- a/hw/vendor/openhwgroup_cv32e40x/rtl/cv32e40x_id_stage.sv
+++ b/hw/vendor/openhwgroup_cv32e40x/rtl/cv32e40x_id_stage.sv
@@ -98,6 +98,8 @@ module cv32e40x_id_stage import cv32e40x_pkg::*;
 
   // eXtension interface
   if_xif.cpu_issue    xif_issue_if,
+  input  logic        xif_mem_valid_i,
+  input  logic        xif_mem_ready_i,
   output logic        xif_offloading_o
 );
 
@@ -681,6 +683,8 @@ module cv32e40x_id_stage import cv32e40x_pkg::*;
 
       end else if (ex_ready_i) begin
         id_ex_pipe_o.instr_valid            <= 1'b0;
+      end else if (xif_mem_valid_i && xif_mem_ready_i) begin
+        id_ex_pipe_o.instr_valid            <= 1'b0;
       end
     end
   end
diff --git a/hw/vendor/openhwgroup_cv32e40x/rtl/cv32e40x_if_stage.sv b/hw/vendor/openhwgroup_cv32e40x/rtl/cv32e40x_if_stage.sv
index 2c4235b..4f46c83 100644
--- a/hw/vendor/openhwgroup_cv32e40x/rtl/cv32e40x_if_stage.sv
+++ b/hw/vendor/openhwgroup_cv32e40x/rtl/cv32e40x_if_stage.sv
@@ -432,7 +432,6 @@ module cv32e40x_if_stage import cv32e40x_pkg::*;
 
         if_id_pipe_o.priv_lvl         <= prefetch_priv_lvl;
         if_id_pipe_o.trigger_match    <= trigger_match_i;
-        if_id_pipe_o.xif_id           <= xif_id;
         if_id_pipe_o.last_op          <= last_op_o;
         if_id_pipe_o.first_op         <= first_op_o;
         if_id_pipe_o.abort_op         <= abort_op_o;
@@ -478,6 +477,10 @@ module cv32e40x_if_stage import cv32e40x_pkg::*;
       end else if (id_ready_i) begin
         if_id_pipe_o.instr_valid      <= 1'b0;
       end
+      // Update the xif_id whenever the ID stage attempts to offload an instruction
+      if (id_ready_i && xif_offloading_id_i) begin
+        if_id_pipe_o.xif_id <= xif_id;
+      end
     end
   end
 

// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// Register Package auto-generated by `reggen` containing data structure

package refs_ctrl_reg_pkg;

  // Address widths within the block
  parameter int BlockAw = 4;

  ////////////////////////////
  // Typedefs for registers //
  ////////////////////////////

  typedef struct packed {logic [9:0] q;} refs_ctrl_reg2hw_iref1_calibration_reg_t;

  typedef struct packed {logic [9:0] q;} refs_ctrl_reg2hw_iref2_calibration_reg_t;

  typedef struct packed {logic [4:0] q;} refs_ctrl_reg2hw_vref_calibration_reg_t;

  // Register -> HW type
  typedef struct packed {
    refs_ctrl_reg2hw_iref1_calibration_reg_t iref1_calibration;  // [24:15]
    refs_ctrl_reg2hw_iref2_calibration_reg_t iref2_calibration;  // [14:5]
    refs_ctrl_reg2hw_vref_calibration_reg_t  vref_calibration;   // [4:0]
  } refs_ctrl_reg2hw_t;

  // Register offsets
  parameter logic [BlockAw-1:0] REFS_CTRL_IREF1_CALIBRATION_OFFSET = 4'h0;
  parameter logic [BlockAw-1:0] REFS_CTRL_IREF2_CALIBRATION_OFFSET = 4'h4;
  parameter logic [BlockAw-1:0] REFS_CTRL_VREF_CALIBRATION_OFFSET = 4'h8;

  // Register index
  typedef enum int {
    REFS_CTRL_IREF1_CALIBRATION,
    REFS_CTRL_IREF2_CALIBRATION,
    REFS_CTRL_VREF_CALIBRATION
  } refs_ctrl_id_e;

  // Register width information to check illegal writes
  parameter logic [3:0] REFS_CTRL_PERMIT[3] = '{
      4'b0011,  // index[0] REFS_CTRL_IREF1_CALIBRATION
      4'b0011,  // index[1] REFS_CTRL_IREF2_CALIBRATION
      4'b0001  // index[2] REFS_CTRL_VREF_CALIBRATION
  };

endpackage


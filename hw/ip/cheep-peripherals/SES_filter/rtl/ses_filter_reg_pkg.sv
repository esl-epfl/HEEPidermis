// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// Register Package auto-generated by `reggen` containing data structure

package ses_filter_reg_pkg;

  // Address widths within the block
  parameter int BlockAw = 5;

  ////////////////////////////
  // Typedefs for registers //
  ////////////////////////////

  typedef struct packed {logic q;} ses_filter_reg2hw_ses_control_reg_t;

  typedef struct packed {logic [4:0] q;} ses_filter_reg2hw_ses_window_size_reg_t;

  typedef struct packed {logic [9:0] q;} ses_filter_reg2hw_ses_decim_factor_reg_t;

  typedef struct packed {logic [9:0] q;} ses_filter_reg2hw_ses_sysclk_division_reg_t;

  typedef struct packed {logic [5:0] q;} ses_filter_reg2hw_ses_activated_stages_reg_t;

  typedef struct packed {
    struct packed {logic [4:0] q;} gain_stg_0;
    struct packed {logic [4:0] q;} gain_stg_1;
    struct packed {logic [4:0] q;} gain_stg_2;
    struct packed {logic [4:0] q;} gain_stg_3;
    struct packed {logic [4:0] q;} gain_stg_4;
    struct packed {logic [4:0] q;} gain_stg_5;
  } ses_filter_reg2hw_ses_gain_stage_reg_t;

  typedef struct packed {
    logic [1:0] d;
    logic       de;
  } ses_filter_hw2reg_ses_status_reg_t;

  // Register -> HW type
  typedef struct packed {
    ses_filter_reg2hw_ses_control_reg_t ses_control;  // [61:61]
    ses_filter_reg2hw_ses_window_size_reg_t ses_window_size;  // [60:56]
    ses_filter_reg2hw_ses_decim_factor_reg_t ses_decim_factor;  // [55:46]
    ses_filter_reg2hw_ses_sysclk_division_reg_t ses_sysclk_division;  // [45:36]
    ses_filter_reg2hw_ses_activated_stages_reg_t ses_activated_stages;  // [35:30]
    ses_filter_reg2hw_ses_gain_stage_reg_t ses_gain_stage;  // [29:0]
  } ses_filter_reg2hw_t;

  // HW -> register type
  typedef struct packed {
    ses_filter_hw2reg_ses_status_reg_t ses_status;  // [2:0]
  } ses_filter_hw2reg_t;

  // Register offsets
  parameter logic [BlockAw-1:0] SES_FILTER_SES_CONTROL_OFFSET = 5'h0;
  parameter logic [BlockAw-1:0] SES_FILTER_SES_STATUS_OFFSET = 5'h4;
  parameter logic [BlockAw-1:0] SES_FILTER_SES_WINDOW_SIZE_OFFSET = 5'h8;
  parameter logic [BlockAw-1:0] SES_FILTER_SES_DECIM_FACTOR_OFFSET = 5'hc;
  parameter logic [BlockAw-1:0] SES_FILTER_SES_SYSCLK_DIVISION_OFFSET = 5'h10;
  parameter logic [BlockAw-1:0] SES_FILTER_SES_ACTIVATED_STAGES_OFFSET = 5'h14;
  parameter logic [BlockAw-1:0] SES_FILTER_SES_GAIN_STAGE_OFFSET = 5'h18;

  // Window parameters
  parameter logic [BlockAw-1:0] SES_FILTER_RX_DATA_OFFSET = 5'h1c;
  parameter int unsigned SES_FILTER_RX_DATA_SIZE = 'h4;

  // Register index
  typedef enum int {
    SES_FILTER_SES_CONTROL,
    SES_FILTER_SES_STATUS,
    SES_FILTER_SES_WINDOW_SIZE,
    SES_FILTER_SES_DECIM_FACTOR,
    SES_FILTER_SES_SYSCLK_DIVISION,
    SES_FILTER_SES_ACTIVATED_STAGES,
    SES_FILTER_SES_GAIN_STAGE
  } ses_filter_id_e;

  // Register width information to check illegal writes
  parameter logic [3:0] SES_FILTER_PERMIT[7] = '{
      4'b0001,  // index[0] SES_FILTER_SES_CONTROL
      4'b0001,  // index[1] SES_FILTER_SES_STATUS
      4'b0001,  // index[2] SES_FILTER_SES_WINDOW_SIZE
      4'b0011,  // index[3] SES_FILTER_SES_DECIM_FACTOR
      4'b0011,  // index[4] SES_FILTER_SES_SYSCLK_DIVISION
      4'b0001,  // index[5] SES_FILTER_SES_ACTIVATED_STAGES
      4'b1111  // index[6] SES_FILTER_SES_GAIN_STAGE
  };

endpackage

